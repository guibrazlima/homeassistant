#
# Estimador térmico p/ 50 tubos Varisol HP90 a partir do Forecast.Solar (instância 1 kWp)
# Usa os sensores:
#  - sensor.power_production_now_tubos_hp90        (kW por 1 kWp)  -> fator de sol instantâneo
#  - sensor.energy_production_today_tubos_hp90     (kWh/kWp)       -> H_POA diário aproximado
#

input_number:
  solar_hp_n_tubos:
    name: "HP90 — Nº de tubos"
    min: 1
    max: 120
    step: 1
    initial: 50

  solar_hp_area_tubo_m2:
    name: "HP90 — Área por tubo (m²)"
    min: 0.05
    max: 0.20
    step: 0.001
    initial: 0.105      # Varisol HP90 (abertura ~0.105 m²)

  solar_hp_eta_sistema:
    name: "HP90 — Rendimento térmico (0–1)"
    min: 0.30
    max: 0.85
    step: 0.01
    initial: 0.55       # ponto de partida; calibra com dias claros

  dhw_volume_l:
    name: "AQS — Volume (L)"
    min: 50
    max: 1000
    step: 10
    unit_of_measurement: "L"
    initial: 500

template:
  - sensor:
      # Área total do campo (m²)
      - name: "HP90 — Área total (m²)"
        unique_id: hp90_area_total_m2
        unit_of_measurement: "m²"
        icon: mdi:selection
        state: >
          {% set n  = states('input_number.solar_hp_n_tubos')|float(50) %}
          {% set at = states('input_number.solar_hp_area_tubo_m2')|float(0.105) %}
          {{ (n * at) | round(3) }}

      # Potência térmica instantânea (kW):
      # kW_th ≈ power_now_FS(kW/kWp para 1 kWp) * A(m²) * η
      - name: "HP90 — Potência térmica (kW)"
        unique_id: hp90_pot_termica_kw
        unit_of_measurement: "kW"
        icon: mdi:solar-power
        state: >
          {% set p_fs = states('sensor.power_production_now_tubos_hp90')|float(0) %}
          {% set A    = states('sensor.hp90_area_total_m2')|float(0) %}
          {% set eta  = states('input_number.solar_hp_eta_sistema')|float(0.55) %}
          {{ (p_fs * A * eta) | round(2) }}

      # Energia térmica útil do dia (kWh):
      # E ≈ energy_today_FS(kWh/kWp) * A(m²) * η
      - name: "HP90 — Energia térmica do dia (kWh)"
        unique_id: hp90_energia_termica_dia_kwh
        unit_of_measurement: "kWh"
        icon: mdi:chart-areaspline
        state: >
          {% set Hpoa = states('sensor.energy_production_today_tubos_hp90')|float(0) %}
          {% set A    = states('sensor.hp90_area_total_m2')|float(0) %}
          {% set eta  = states('input_number.solar_hp_eta_sistema')|float(0.55) %}
          {{ (Hpoa * A * eta) | round(1) }}

      # ΔT previsto hoje para 500 L
      - name: "HP90 — ΔT previsto hoje (°C)"
        unique_id: hp90_deltaT_previsto_hoje_c
        unit_of_measurement: "°C"
        icon: mdi:thermometer-lines
        state: >
          {% set E = states('sensor.hp90_energia_termica_do_dia_kwh')|float(0) %}
          {% set V = states('input_number.dhw_volume_l')|float(500) %}
          {% set kWh_per_C = (V * 4.18 / 3600) %}
          {{ (E / kWh_per_C) | round(1) }}

      # (Opcional) Subtrair perdas reais do depósito (se existir sensor.aqs_perdas_kwh_dia)
      - name: "HP90 — Energia líquida após perdas (kWh)"
        unique_id: hp90_energia_liquida_kwh
        unit_of_measurement: "kWh"
        icon: mdi:fire-circle
        state: >
          {% set E  = states('sensor.hp90_energia_termica_do_dia_kwh')|float(0) %}
          {% set Pl = states('sensor.aqs_perdas_kwh_dia')|float(0) %}
          {% set net = (E - Pl) %}
          {{ (net if net > 0 else 0) | round(1) }}

      - name: "HP90 — ΔT líquido previsto (°C)"
        unique_id: hp90_deltaT_liquido_previsto_c
        unit_of_measurement: "°C"
        icon: mdi:thermometer-water
        state: >
          {% set E_net = states('sensor.hp90_energia_liquida_apos_perdas_kwh')|float(0) %}
          {% set V     = states('input_number.dhw_volume_l')|float(500) %}
          {% set kWh_per_C = (V * 4.18 / 3600) %}
          {{ (E_net / kWh_per_C) | round(1) }}

